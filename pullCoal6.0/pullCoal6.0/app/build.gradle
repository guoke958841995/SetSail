apply plugin: 'com.android.application'

/**
 * 获取极光推送的appkey
 * @return
 */
String jpushAppkeyValue() {
    if ("115".equals(project.OPERATION_MODE)) {
        return "a7ae096d8c5b8b6448d83e86"
    } else {
        return "6739397e6107c51b3c66ab1c"
    }
}

/**
 * 获取baseUrl
 * @return
 */
def baseUrl() {
    if ("test199".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_URL_TEST_DEBUG_199 + "\""
    } else if ("test139".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_URL_TEST_DEBUG_139 + "\""
    } else if ("115".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_URL_REAL_RELEASE + "\""
    }
}

/**
 * 获取baseShareIp
 * @return
 */
def baseShareIp() {
    if ("test199".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_SHARE_IP_DEBUG + "\""
    } else if ("test139".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_SHARE_IP_DEBUG + "\""
    } else if ("115".equals(project.OPERATION_MODE)) {
        return "\"" + project.BASE_SHARE_IP_RELEASE + "\""
    }
}

/**
 * 获取server
 * @return
 */
def server() {
    if ("test199".equals(project.OPERATION_MODE)) {
        return "\"lmbapi/\""
    } else if ("test139".equals(project.OPERATION_MODE)) {
        return "\"lmbapi/\""
    } else if ("115".equals(project.OPERATION_MODE)) {
        return "\"lmbapi/\""
    }
}

android {

    String JPUSH_APPKEY_VALUE = jpushAppkeyValue()
    def api_version = "\"" + project.API_VERSION + "\""
    def app_version_name = "\"" + project.APP_VERSION_NAME + "\""
    def baseUrl = baseUrl()
    def baseShareIp = baseShareIp()
    def server = server()

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "JPUSH_APPKEY", "\"" + "${JPUSH_APPKEY_VALUE}" + "\"")
        buildConfigField "String", "OPERATION_MODE", "\"" + project.OPERATION_MODE + "\""
        buildConfigField "String", "API_VERSION", "${api_version}"
        buildConfigField "String", "APP_VERSION", "${app_version_name}"
        buildConfigField "String", "BASE_URL", "${baseUrl}"
        buildConfigField "String", "SHARE_IP", "${baseShareIp}"
        buildConfigField "String", "SERVICE", "${server}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //android-support
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["legacy-support-v4"]
    implementation 'androidx.appcompat:appcompat:1.0.0-alpha1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    //图片加载
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //net
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["converter-scalars"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    implementation rootProject.ext.dependencies["okhttp"]
    //rx
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    //dagger
    implementation rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    //butterknife
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //eventbus
    implementation rootProject.ext.dependencies["eventbus"]

    //view
    implementation rootProject.ext.dependencies["fragmentation"]
    //paper
    implementation rootProject.ext.dependencies["paperdb"]
    //下拉刷新
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    //baseAdapter
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    //动态权限获取
    implementation rootProject.ext.dependencies["permission"]
    //滑动开关
    implementation rootProject.ext.dependencies["switchbutton"]
}
